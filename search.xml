<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>标题</title>
      <link href="/2020/04/27/test/"/>
      <url>/2020/04/27/test/</url>
      
        <content type="html"><![CDATA[<p>mathjax 是是否开启数学公式支持</p><p>上面这部分是摘要</p><a id="more"></a><p>下面是正文，注意 more 前后空一排，avatar 是作者头像</p>]]></content>
      
      
      
        <tags>
            
            <tag> 标签 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数学测试</title>
      <link href="/2020/04/27/math/"/>
      <url>/2020/04/27/math/</url>
      
        <content type="html"><![CDATA[<p>$$<br>S^2 = \frac {1} {n} \sum_{i=1} ^ {n} (x_i - \overline {x})^2<br>$$</p><p>$$<br>S^2 = \frac {1} {n} \sum_{i=1} ^ {n} (x_i - \overline {x})^2<br>$$</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用 Github Pages 和 Hexo 搭建自己的独立博客</title>
      <link href="/2020/04/27/hexo-blog/"/>
      <url>/2020/04/27/hexo-blog/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/01.png" alt="01"></p><a id="more"></a><blockquote><p>加入 Hexo 博客交流群：924812033，有问题互相交流学习！<a target="_blank" href="//shang.qq.com/wpa/qunwpa?idkey=4bb493ed9bd2ff3682bed3389fbb9ff0963528688d8f5ac5dadc1f1dc735b9fb"><img border="0" src="//pub.idqqimg.com/wpa/images/group.png" alt="Hexo 博客交流群" title="Hexo 博客交流群"></a></p></blockquote><h1 id="–-前言"><a href="#–-前言" class="headerlink" title="– 前言"></a><font color=#FF000>– 前言</font></h1><blockquote><p>首先感谢您能访问我的博客：<a href="https://trhx.github.io" target="_blank" rel="noopener">TRHX’S BLOG</a></p></blockquote><p>这是一篇有关如何使用 <font color=#DC143C>Github Pages</font> 和 <font color=#DC143C>Hexo</font> 搭建属于自己独立博客的详尽教程，本人是软件工程专业本科生，目前只学习了C和C++编程语言，对网站开发的有关知识几乎为零，这也是我搭建好自己的博客之后写的第一篇博客，刚开始搭建博客的时候自己也是网上各种百度，由于自己属于<font color=#DC143C>小白</font>那种，历经了千辛万苦才弄好，所以借这个机会写一篇小白真正能看懂的博客搭建教程，教你一步一步走向成功的彼岸！</p><p>推荐文章： <a href="http://www.cnblogs.com/jhzhu/p/3893297.html" target="_blank" rel="noopener">《我为什么写博客》</a> （By 知明所以）<br>　　　　 　<a href="http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/" target="_blank" rel="noopener">《为什么你应该（从现在开始就）写博客》</a>  (By 刘未鹏 | Mind Hacks)</p><h1 id="–-入门"><a href="#–-入门" class="headerlink" title="– 入门"></a><font color=#FF000>– 入门</font></h1><blockquote><p><strong>Github Pages</strong></p></blockquote><p>Github Pages可以被认为是用户编写的、托管在github上的静态网页。使用Github Pages可以为你提供一个免费的服务器，免去了自己搭建服务器和写数据库的麻烦。此外还可以绑定自己的域名。</p><blockquote><p><strong>Hexo</strong></p></blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h1 id="–-安装-Node-js"><a href="#–-安装-Node-js" class="headerlink" title="– 安装 Node.js"></a><font color=#FF000>– 安装 Node.js</font></h1><p><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">点击此处</a>访问官网，按需下载相应版本，默认安装可以了</p><p><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/02.jpg" alt="02"></p><p>注：本人在安装过程中出现了Warning 1909,无法创建快捷方式，这种情况很少出现，如果在安装过程中也有这种情况请参考百度文库（win10系统实测可行）：<a href="https://wenku.baidu.com/view/4ad59110964bcf84b9d57ba5.html" target="_blank" rel="noopener">《Win7安装程序警告1909无法创建快捷方式》</a></p><p><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/03.jpg" alt="03"></p><h1 id="–-安装-Git"><a href="#–-安装-Git" class="headerlink" title="– 安装 Git"></a><font color=#FF000>– 安装 Git</font></h1><p><a href="https://git-scm.com/download/win" target="_blank" rel="noopener">点击此处</a>访问官网，按需下载相应版本，默认安装即可<br>参考资料：<a href="https://www.cnblogs.com/jytx/p/5602927.html" target="_blank" rel="noopener">《如何在windows下安装GIT》</a> 　（By 俊雨廷休）<br>　　　　　<a href="http://git.oschina.net/progit/" target="_blank" rel="noopener">《Pro Git（中文版）》</a></p><h1 id="–-检验软件是否安装成功"><a href="#–-检验软件是否安装成功" class="headerlink" title="– 检验软件是否安装成功"></a><font color=#FF000>– 检验软件是否安装成功</font></h1><p>同时按下 Win 键和 R 键打开运行窗口,输入 <font color=#DC143C>cmd</font> ，然后输入以下命令，有相应版本信息显示则安装成功，若不正确可以卸载软件重新安装，此外若安装成功，在桌面右键鼠标，可以看到菜单里多了 <font color=#DC143C>Git GUI Here</font> 和 <font color=#DC143C>Git Bash Here</font>两个选项，第一个是<font color=#DC143C>图形界面的Git操作</font>，另一个是<font color=#DC143C>命令行</font> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git --version</span><br><span class="line">$ node -v</span><br><span class="line">$ npm -v</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/04.jpg" alt="04"></p><p><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/05.jpg" alt="05"></p><h1 id="–-Hexo-安装"><a href="#–-Hexo-安装" class="headerlink" title="– Hexo 安装"></a><font color=#FF000>– Hexo 安装</font></h1><p>选择一个磁盘，新建一个文件夹，自己重命名文件夹（如：我的文件夹为：<font color=#DC143C>Ｅ\TRHX_Blog</font>），博客相关文件将储存在此文件夹下，在该文件夹下右键鼠标，点击 <font color=#DC143C>Git Bash Here</font>，输入以下 npm 命令即可安装，第一个命令表示安装 hexo，第二个命令表示安装 hexo 部署到 git page 的 deployer，如图所示即为安装成功  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/06.png" alt="06"></p><h1 id="–-Hexo-初始化配置"><a href="#–-Hexo-初始化配置" class="headerlink" title="– Hexo 初始化配置"></a><font color=#FF000>– Hexo 初始化配置</font></h1><p>在刚才新建的文件夹里面再次新建一个 <font color=#DC143C>Hexo</font> 文件夹（如：我的文件夹为：<font color=#DC143C>E\TRHX_Blog\Hexo</font>）,进入该 <font color=#DC143C>Hexo</font> 文件夹右键鼠标，点击 <font color=#DC143C>Git Bash Here</font>，输入以下命令，如图所示则安装成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/07.png" alt="07"></p><p>Hexo 安装完成后，将会在指定文件夹中新建所需要的文件，Hexo 文件夹下的目录如下：<br><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/08.jpg" alt="08"></p><h1 id="–-本地查看效果"><a href="#–-本地查看效果" class="headerlink" title="– 本地查看效果"></a><font color=#FF000>– 本地查看效果</font></h1><p>执行以下命令，执行完即可登录 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 查看效果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>显示以下信息说明操作成功：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO Hexo is running at http:&#x2F;&#x2F;0.0.0.0:4000&#x2F;. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>登录 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 查看效果：<br><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/09.jpg" alt="09"></p><h1 id="–-将博客部署到-Github-Pages-上"><a href="#–-将博客部署到-Github-Pages-上" class="headerlink" title="– 将博客部署到 Github Pages 上"></a><font color=#FF000>– 将博客部署到 Github Pages 上</font></h1><p>到目前为止，我们的本地博客就成功搭建了，但是现在我们只能通过本地连接查看博客，我们要做的是让其他人也能够访问我们的博客，这就需要我们将博客部署到Github Pages上</p><p>一、注册 Github 账户：<a href="https://github.com" target="_blank" rel="noopener">点击此处</a>访问 Github 官网，点击 Sign Up 注册账户</p><p>二、创建项目代码库：点击 <font color=#DC143C>New repository</font> 开始创建，步骤及注意事项见图：<br><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/10.jpg" alt="10"></p><p>三、配置 <font color=#DC143C>SSH</font> 密钥：只有配置好 <font color=#DC143C>SSH</font> 密钥后，我们才可以通过 git 操作实现本地代码库与 Github 代码库同步，在你第一次新建的文件夹里面（如：我的文件夹为：<font color=#DC143C>Ｅ\TRHX_Blog</font>） <font color=#DC143C>Git Bash Here</font> 输入以下命令：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C &quot;your email@example.com&quot;</span><br><span class="line">&#x2F;&#x2F;引号里面填写你的邮箱地址，比如我的是tanrenhou@126.com</span><br></pre></td></tr></table></figure><p>之后会出现： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Generating public&#x2F;private rsa key pair.</span><br><span class="line">Enter file in which to save the key (&#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa):</span><br><span class="line">&#x2F;&#x2F;到这里可以直接回车将密钥按默认文件进行存储</span><br></pre></td></tr></table></figure><p>然后会出现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Enter passphrase (empty for no passphrase):</span><br><span class="line">&#x2F;&#x2F;这里是要你输入密码，其实不需要输什么密码，直接回车就行</span><br><span class="line">Enter same passphrase again:</span><br></pre></td></tr></table></figure><p>接下来屏幕会显示：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Your identification has been saved in &#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa.</span><br><span class="line">Your public key has been saved in &#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">这里是各种字母数字组成的字符串，结尾是你的邮箱</span><br><span class="line">The key&#39;s randomart image is:</span><br><span class="line">这里也是各种字母数字符号组成的字符串</span><br></pre></td></tr></table></figure><p>运行以下命令，将公钥的内容复制到系统粘贴板上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ clip &lt; ~&#x2F;.ssh&#x2F;id_rsa.pub</span><br></pre></td></tr></table></figure><p>四、在 GitHub 账户中添加你的公钥</p><p>1.登陆 GitHub，进入 <font color=#DC143C>Settings</font>：<br><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/11.jpg" alt="11"></p><p>2.点击 <font color=#DC143C>SSH and GPG Keys</font>：<br><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/12.jpg" alt="12"></p><p>3.选择 <font color=#DC143C>New SSH key</font>：<br><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/13.jpg" alt="13"></p><p>4.粘贴密钥：<br><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/14.jpg" alt="14"></p><p>五、测试</p><p>输入以下命令：<font color=#DC143C>注意：<a href="mailto:git@github.com">git@github.com</a>不要做任何更改！</font></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>之后会显示：<br><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/15.png" alt="15"></p><p>输入 <font color=#DC143C>yes</font> 后会显示：<br><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/16.png" alt="16"><br>此时表示设置正确</p><p>六、配置 Git 个人信息</p><p>Git 会根据用户的名字和邮箱来记录提交，GitHub 也是用这些信息来做权限的处理，输入以下命令进行个人信息的设置，把名称和邮箱替换成你自己的，名字可以不是 GitHub 的昵称，但为了方便记忆，建议与 GitHub  一致</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;此处填你的用户名&quot;</span><br><span class="line">$ git config --global user.email &quot;此处填你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>到此为止 SSH Key 配置成功，本机已成功连接到 Github</p><h1 id="–-将本地的-Hexo-文件更新到-Github-的库中"><a href="#–-将本地的-Hexo-文件更新到-Github-的库中" class="headerlink" title="– 将本地的 Hexo 文件更新到 Github 的库中"></a><font color=#FF000>– 将本地的 Hexo 文件更新到 Github 的库中</font></h1><p>一、登录 Github 打开自己的项目 <font color=#DC143C>yourname.github.io</font><br><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/17.jpg" alt="17"></p><p>二、鼠标移到 <font color=#DC143C>Clone or download</font> 按钮，选择 <font color=#DC143C>Use SSH</font><br><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/18.jpg" alt="18"></p><p>三、一键复制地址<br><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/19.jpg" alt="19"></p><p>四、打开你创建的 <font color=#DC143C>Hexo</font> 文件夹（如：<font color=#DC143C>E:\TRHX_Blog\Hexo</font>），右键用记事本（或者Notepad++、Vs Code等）打开该文件夹下的 <font color=#DC143C>_config.yml</font> 文件<br><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/20.jpg" alt="20"></p><p>五、按下图修改 <font color=#DC143C>_config.yml</font> 文件并保存<br><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/21.png" alt="21"></p><p>六、在 <font color=#DC143C>Hexo</font> 文件夹下分别执行以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>或者直接执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure><p>执行完之后会让你输入你的 Github 的账号和密码，如果此时报以下错误，说明你的 deployer 没有安装成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR Deployer not found: git</span><br></pre></td></tr></table></figure><p>需要执行以下命令再安装一次：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>再执行 <font color=#DC143C><code>hexo g -d</code></font>，你的博客就会部署到 Github 上了</p><p>七、访问博客</p><p>你的博客地址：<font color=#DC143C>https://你的用户名.github.io</font>，比如我的是：<font color=#DC143C><a href="https://trhx.github.io" target="_blank" rel="noopener">https://trhx.github.io</a></font> ，现在每个人都可以通过此链接访问你的博客了</p><h1 id="–-如何在博客上发表文章"><a href="#–-如何在博客上发表文章" class="headerlink" title="– 如何在博客上发表文章"></a><font color=#FF000>– 如何在博客上发表文章</font></h1><p>博客已经成功搭建了，但是我们该怎么写博客呢？</p><p>一、新建一个空文章，输入以下命令，会在项目 <font color=#DC143C>\Hexo\source\_posts</font> 中生成 <font color=#DC143C>文章标题.md</font> 文件，文章标题根据需要命名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo n &quot;文章标题&quot;</span><br></pre></td></tr></table></figure><p>也可以直接在 <font color=#DC143C>\Hexo\source\_posts</font> 目录下右键鼠标新建文本文档，改后缀为 <font color=#DC143C>.md</font> 即可，这种方法比较方便</p><p>二、用编辑器编写文章</p><p><font color=#DC143C>md</font> 全称 Markdown， Markdown 是 2004 年由 John Gruberis 设计和开发的纯文本格式的语法，非常的简单实用，常用的标记符号屈指可数，几分钟即可学会， <font color=#DC143C>.md</font> 文件可以使用支持 Markdown 语法的编辑器编辑，然后将写好的文章（.md文件）保存到 <font color=#DC143C>\Hexo\source\_posts</font> 文件夹下即可</p><p>推荐 Windows 上使用 <font color=#DC143C>MarkdownPad2</font> 或者 <font color=#DC143C>小书匠</font> 编辑器，macOS 上使用 <font color=#DC143C>Mou</font> 编辑器，Linux 上使用 <font color=#DC143C>Remarkable</font> 编辑器，Web 端上使用<font color=#DC143C> 简书</font> ，另外可以参考我的另一篇文章：<a href="https://www.itrhx.com/2018/08/29/A05-Markdown-editor-recommendation/" target="_blank" rel="noopener">《主流 Markdown 编辑器推荐》</a><br>当我们用编辑器写好文章后，可以使用以下命令将其推送到服务器上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>或者将两个命令合二为一输入以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure><p>现在访问你的博客就可以看见写好的文章啦！<br>参考资料：<a href="https://blog.csdn.net/jinhui157/article/details/73872795" target="_blank" rel="noopener">《10款流行的Markdown编辑器》</a> （By xiaoxiao_engineer）<br>　　　　　<a href="https://www.jianshu.com/p/q81RER/" target="_blank" rel="noopener">《献给写作者的 Markdown 新手指南》</a> （By 简书）<br>　　　　　<a href="https://sspai.com/post/25137" target="_blank" rel="noopener">《认识与入门 Markdown》</a> （By Te_Lee）<br>　　　　　<a href="http://ibruce.info/2013/11/26/markdown/" target="_blank" rel="noopener">《markdown简明语法》</a> （By 不如）<br>　　　　　<a href="https://www.jianshu.com/p/191d1e21f7ed" target="_blank" rel="noopener">《markdown基本语法》</a> （By 高鸿祥）<br>　　　　　<a href="http://www.liuhaihua.cn/archives/143443.html" target="_blank" rel="noopener">《Markdown 公式指导手册》</a> （By Harries）  </p><h1 id="–-如何为博客更换自己喜欢的主题"><a href="#–-如何为博客更换自己喜欢的主题" class="headerlink" title="– 如何为博客更换自己喜欢的主题"></a><font color=#FF000>– 如何为博客更换自己喜欢的主题</font></h1><p>博客也搭建好了，文章也会写了，但是！！！默认的主题并不喜欢怎么办？现在，我们就来为自己的博客更换自己喜欢的主题</p><p><a href="https://hexo.io/themes/" target="_blank" rel="noopener">点击此处</a>进入 Hexo 官网的主题专栏，我们可以看见有许多的主题供我们选择<br><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/22.jpg" alt="22"></p><p>我们要做的就是把主题克隆过来，在此我们以主题 <font color=#DC143C>Aero-Dual</font> 为例，点进去我们就可以看见该主题作者的博客，鼠标滑到底，我们可以看见 <font color=#DC143C>Theme By Levblanc</font> 的字样（其他主题类似），点击作者 <font color=#DC143C>Levblanc</font> ，页面就会跳转到该主题所有的相关文件在 Github 上的地址，复制该地址<br><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/23.png" alt="23"><br><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/24.jpg" alt="24"><br><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/25.jpg" alt="25"></p><p>再打开 <font color=#DC143C>Hexo</font> 文件夹下的 <font color=#DC143C>themes</font> 目录（如：<font color=#DC143C>E:\TRHX_Blog\Hexo\themes</font>），右键 <font color=#DC143C>Git Bash Here</font>，输入以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone 此处填写你刚才复制的主题地址</span><br></pre></td></tr></table></figure><p>比如要安装 <font color=#DC143C>Aero-Dual</font> 主题，则输入命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https:&#x2F;&#x2F;github.com&#x2F;levblanc&#x2F;hexo-theme-aero-dual</span><br></pre></td></tr></table></figure><p>等待下载完成后即可在 <font color=#DC143C>themes</font> 目录下生成 <font color=#DC143C>hexo-theme-aero-dual</font> 文件夹，然后打开 <font color=#DC143C>Hexo</font> 文件夹下的配置文件 <font color=#DC143C>_config.yml</font> ，找到关键字 <font color=#DC143C>theme</font>，修改参数为：<font color=#DC143C>theme：hexo-theme-aero-dual</font> （其他主题修改成相应名称即可），再次注意冒号后面有一个空格！<br><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/26.jpg" alt="26"></p><p>返回 <font color=#DC143C>Hexo</font> 目录，右键 <font color=#DC143C>Git Bash Here</font> ，输入以下命令开始部署主题：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g   </span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>此时打开浏览器，访问 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>  就可看见我们的主题已经更换了，如果感觉效果满意，我们就可以把它部署到Github上了</p><p>打开 <font color=#DC143C>Hexo</font> 文件夹，右键 <font color=#DC143C>Git Bash Here</font> ，输入以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean  </span><br><span class="line">&#x2F;&#x2F;该命令的作用是清除缓存，若不输入此命令，服务器有可能更新不了主题</span><br><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure><p>此时访问自己的博客即可看见更换后的主题，但我们仍然需要对主题的相关配置进行修改，比如网站标题，图标等等，Hexo 中有两份主要的配置文件，名称都是  <font color=#DC143C>_config.yml</font> ，它们均是用于站点配置使用的。其中，一份位于站点根目录下（比如我的：<font color=#DC143C>E:\TRHX_Blog\Hexo\_config.yml</font>），主要包含 Hexo 本身整站的配置；另一份位于主题目录下（比如我的：<font color=#DC143C>E:\TRHX_Blog\Hexo\themes\hexo-theme-aero-dual\_config.yml</font>），这份配置由主题作者提供，主要用于配置主题相关的选项，一般  <font color=#DC143C>_config.yml</font>  文件里都有相关注释，按需修改即可</p><p>参考资料：<a href="https://www.zhihu.com/question/24422335" target="_blank" rel="noopener">《有哪些好看的 Hexo 主题？》</a> （知乎）<br>　　　　　<a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">《Hexo | 配置》</a> （Hexo官方文档）<br>　　　　　<a href="https://segmentfault.com/a/1190000002632530" target="_blank" rel="noopener">《hexo常用命令笔记》</a> （By 小弟调调）</p><h1 id="–-为你的-Hexo-博客配置个性域名"><a href="#–-为你的-Hexo-博客配置个性域名" class="headerlink" title="– 为你的 Hexo 博客配置个性域名"></a><font color=#FF000>– 为你的 Hexo 博客配置个性域名</font></h1><p>本人在配置域名的时候问题百出，百度的各种方法都不管用，打开网站总是 404，可能是我太笨了 　o(╥﹏╥)o　，不过好在后来终于解决了这个问题</p><p>首先我们要购买域名，<a href="https://www.aliyun.com" target="_blank" rel="noopener">阿里云</a>，<a href="https://cloud.tencent.com" target="_blank" rel="noopener">腾讯云</a>都可以，也不贵，一年几十块钱，最便宜几块钱也能买到，以阿里云为例，我购买的域名是 <a href="https://www.itrhx.com" target="_blank" rel="noopener">itrhx.com</a>，购买过程就不赘述了，选择阿里云的解析平台，来到阿里云的管理控制台，点击进入域名解析列表或者直接点击域名后面的解析<br><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/27.jpg" alt="27"></p><p>方法一：点击添加记录，需要添加两个记录，两个记录类型都是 <font color=#DC143C>CNAME</font> ，第一个主机记录为 <font color=#DC143C>@</font> ，第二个主机记录为 <font color=#DC143C>www</font>，记录值都是填你自己的博客地址（比如我的是：<font color=#DC143C><a href="http://trhx.github.io" target="_blank" rel="noopener">trhx.github.io</a></font>），保存之后域名解析就完成了！<br><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/28.jpg" alt="28"><br>方法二：两个记录类型为 <font color=#DC143C>A</font> ，第一个主机记录为 <font color=#DC143C>@</font> ，第二个主机记录为 <font color=#DC143C>www</font>，记录值都为博客的 <font color=#DC143C>IP</font> 地址，<font color=#DC143C>IP</font> 地址可以 <font color=#DC143C>cmd</font> 中输入 <font color=#DC143C>ping 你的博客地址</font> 获得（比如我的：<font color=#DC143C>ping trhx.github.io</font>），保存之后域名解析就完成了！<br><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/29.jpg" alt=""><br>有关解析记录类型的区别可以参考<a href="https://blog.csdn.net/it_man/article/details/9017307" target="_blank" rel="noopener">《域名解析中A记录、CNAME、MX记录、NS记录的区别和联系》</a> </p><p>为了使 GitHub 接收我们的域名，还需要在博客的根目录下添加一个名为 <font color=#DC143C>CNAME</font> 的文件（<font color=#DC143C>注意不要加.txt，没有任何后缀名！</font>），这个文件放到 <font color=#DC143C>Hexo</font> 文件夹的 <font color=#DC143C>source</font> 里面，（比如我的是：<font color=#DC143C>E:\TRHX_Blog\Hexo\source</font>），文件里面填写你的域名（<font color=#DC143C>加不加www都行</font>），比如要填写我的域名，文件里面就写：<font color=#DC143C><a href="http://www.itrhx.com" target="_blank" rel="noopener">www.itrhx.com</a></font> 或者 <font color=#DC143C>itrhx.com</font>，经过以上操作，别人就可以通过 <a href="http://www.itrhx.com" target="_blank" rel="noopener">www.itrhx.com</a> 、<a href="https://itrhx.com" target="_blank" rel="noopener">itrhx.com</a> 、<a href="https://trhx.github.io" target="_blank" rel="noopener">trhx.github.io</a> 三个当中任意一个访问我的博客了！你的也一样！</p><p>有关加不加www的问题有以下区别：</p><blockquote><p>如果你填写的是没有www的，比如 itrhx.com，那么无论是访问 <a href="https://www.itrhx.com" target="_blank" rel="noopener">https://www.itrhx.com</a> 还是 <a href="https://itrhx.com" target="_blank" rel="noopener">https://itrhx.com</a> ，都会自动跳转到 <a href="https://itrhx.com" target="_blank" rel="noopener">https://itrhx.com</a></p></blockquote><blockquote><p>如果你填写的是带www的，比如 <a href="http://www.itrhx.com" target="_blank" rel="noopener">www.itrhx.com</a> ，那么无论是访问 <a href="https://www.itrhx.com" target="_blank" rel="noopener">https://www.itrhx.com</a> 还是 <a href="https://itrhx.com" target="_blank" rel="noopener">https://itrhx.com</a> ，都会自动跳转到 <a href="http://www.itrhx.com" target="_blank" rel="noopener">http://www.itrhx.com</a></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A02/30.jpg" alt="30"></p><p>如果你在其他平台购买域名，或者选择 <a href="https://www.dnspod.cn" target="_blank" rel="noopener">DNSPod</a> 等其他域名解析，操作方法大同小异，遇到问题可自行百度解决！</p><p>参考资料：<a href="https://zhuanlan.zhihu.com/p/27349039" target="_blank" rel="noopener">《推荐几家域名注册服务商》</a>  （By Jelly Bool）<br>　　　　　<a href="http://www.chinaz.com/web/2015/0122/380042.shtml" target="_blank" rel="noopener">《盘点十大免费DNS域名解析服务：稳定、可靠》</a></p><h1 id="–-结语"><a href="#–-结语" class="headerlink" title="– 结语"></a><font color=#FF000>– 结语</font></h1><p>一顿操作下来虽然有点儿累，但看见拥有了自己的博客还是非常有成就感的，人生就是需要折腾，那么现在就开始你的创作之旅吧！文章的不断积累，你会从中受益很多的！另外，这是一篇小白写的适用于小白的博客搭建教程，比较详细，有这方面基础的可以百度有简略一点儿的教程，文中如有错误还请大佬指出改正！文中涉及参考资料如有侵权请联系我删除！</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github Pages </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用 VPS 搭建一个自己的 SSR 服务器</title>
      <link href="/2020/04/27/build-a-SSR-server-with-VPS/"/>
      <url>/2020/04/27/build-a-SSR-server-with-VPS/</url>
      
        <content type="html"><![CDATA[<p>俗话说得好：预先善其事，必先利其器，作为一个程序员，经常会用到 GitHub、Google、Stack Overflow 啥的，由于国内政策原因，想要访问国外网站就得科学上网，最常见的工具就是 ShadowsocksR，又被称为酸酸乳、SSR、小飞机，目前市面上有很多很多的机场，价格也不是很高，完全可以订阅别人的，但是订阅别人的，数据安全没有保障，有可能你的浏览历史啥的别人都能掌握，别人也有随时跑路的可能，总之，只有完全属于自己的东西才是最香的！</p><a id="more"></a><hr><h1 id="购买-VPS"><a href="#购买-VPS" class="headerlink" title="购买 VPS"></a><font color=#FF0000>购买 VPS</font></h1><p>VPS（Virtual Private Server）即虚拟专用服务器技术，在购买 VPS 服务器的时候要选择国外的，推荐 <a href="https://www.vultr.com/" target="_blank" rel="noopener">Vultr</a>，国际知名，性价比比较高，最低有$2.5/月、$3.5/月的，个人用的话应该足够了。</p><fancybox>![01](https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A61/01.png)</fancybox><p>点击链接注册 Vultr 账号：<a href="https://www.vultr.com/?ref=8367048" target="_blank" rel="noopener">https://www.vultr.com/?ref=8367048</a>，目前新注册用户充值10刀可以赠送50刀，注册完毕之后来到充值页面，最低充值10刀，可以选择支付宝或者微信支付。</p><fancybox>![02](https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A61/02.png)</fancybox><p>充值完毕之后，点击左侧 Products，选择服务器，一共有16个地区的，选择不同地区的服务器，最后的网速也有差别，那如何选择一个速度最优的呢？很简单，你可以一次性选择多个服务器，都部署上去，搭建完毕之后，测试其速度，选择最快的，最后再把其他的都删了，可能你会想，部署多个，那费用岂不是很贵，这里注意，虽然写的是多少钱一个月，而实际上它是按照小时计费的，从你部署之后开始计费，$5/月 ≈ $0.00694/小时，你部署完毕再删掉，这段时间的费用很低，可以忽略不计，一般来说，日本和新加坡的比较快一点，也有人说日本和新加坡服务器的端口封得比较多，容易搭建失败，具体可以自己测试一下，还有就是，只有部分地区的服务器有$2.5/月、$3.5/月的套餐，其中$2.5/月的只支持 IPv6，可以根据自己情况选择，<font color=#FF0000>最后操作系统建议选择 CentOS 7 x64 的，不然有可能搭建失败，</font>后面还有个 Enable IPv6 的选项，对 IPv6 有需求的话可以勾上，其他选项就可以不用管了。</p><fancybox>![03](https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A61/03.png)</fancybox><fancybox>![04](https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A61/04.png)</fancybox><p>部署成功后，点 Server Details 可以看到服务器的详细信息，其中有 IP、用户名、密码等信息，后面搭建 SSR 的时候会用到，此时你可以 ping 一下你的服务器 IP，如果 ping 不通的话，可以删掉再重新开一个服务器。</p><fancybox>![05](https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A61/05.png)</fancybox><hr><h1 id="搭建-SSR"><a href="#搭建-SSR" class="headerlink" title="搭建 SSR"></a><font color=#FF0000>搭建 SSR</font></h1><p>我们购买的是虚拟的服务器，因此需要工具远程连接到 VPS，如果是 Mac/Linux 系统，可以直接在终端用 SSH 连接 VPS：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@你VPS的IP -p 22 (22是你VPS的SSH端口)</span><br></pre></td></tr></table></figure><p>如果是 Windows 系统，可以用第三方工具连接到 VPS，如：Xshell、Putty 等，可以百度下载，以下以 Xshell 为例：</p><p>点击文件，新建会话，名称可以随便填，协议为 SSH，主机为你服务器的 IP 地址，点击确定，左侧双击这个会话开始连接，最开始会出现一个 SSH安全警告，点击接受并保存即可，然后会让你输入服务器的用户名和密码，直接在 Vultr 那边复制过来即可，最后看到 <code>[root@vultr ~]#</code> 字样表示连接成功。</p><fancybox>![06](https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A61/06.png)</fancybox><fancybox>![07](https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A61/07.png)</fancybox><fancybox>![08](https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A61/08.png)</fancybox><fancybox>![09](https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A61/09.png)</fancybox><fancybox>![10](https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A61/10.png)</fancybox><p>连接成功后执行以下命令开始安装 SSR：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://freed.ga/github/shadowsocksR.sh; bash shadowsocksR.sh</span><br></pre></td></tr></table></figure><p>如果提示 <code>wget :command not found</code>，可先执行 <code>yum -y install wget</code>，再执行上述命令即可。</p><p>执行完毕后会让你设置 SSR 连接密码和端口，然后按任意键开始搭建。</p><fancybox>![11](https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A61/11.png)</fancybox><p>搭建成功后会显示你服务器 IP，端口，连接密码，协议等信息，这些信息要记住，后面使用 ShadowsocksR 的时候要用到。</p><fancybox>![12](https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A61/12.png)</fancybox><hr><h1 id="安装锐速"><a href="#安装锐速" class="headerlink" title="安装锐速"></a><font color=#FF0000>安装锐速</font></h1><p>由于我们购买的服务器位于国外，如果遇到上网高峰期，速度就会变慢，而锐速就是一款专业的连接加速器，可以充分利用服务器带宽，提升带宽吞吐量，其他还有类似的程序如 Google BBR 等，可以自行比较其加速效果，以下以操作系统为 CentOS 6&amp;7 锐速的安装为例。</p><p>如果你服务器操作系统选择的是 CentOS 6 x64，则直接执行以下命令，一直回车即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -O appex.sh https://raw.githubusercontent.com/hombo125/doubi/master/appex.sh &amp;&amp; bash appex.sh install <span class="string">'2.6.32-642.el6.x86_64'</span></span><br></pre></td></tr></table></figure><p>如果你服务器操作系统选择的是 CentOS 7 x64，则需要先执行以下命令更换内核：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -O rskernel.sh https://raw.githubusercontent.com/hombo125/doubi/master/rskernel.sh &amp;&amp; bash rskernel.sh</span><br></pre></td></tr></table></figure><p>如下图所示表示内核更换完毕，此时已经断开与服务器的连接，我们需要重新连接到服务器，再执行后面的操作：</p><fancybox>![13](https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A61/13.png)</fancybox><p>重新连接到服务器后，再执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install net-tools -y &amp;&amp; wget --no-check-certificate -O appex.sh https://raw.githubusercontent.com/0oVicero0/serverSpeeder_Install/master/appex.sh &amp;&amp; bash appex.sh install</span><br></pre></td></tr></table></figure><p>然后一直回车即可，系统会自动安装锐速。</p><fancybox>![14](https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A61/14.png)</fancybox><fancybox>![15](https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A61/15.png)</fancybox><p>出现以下信息表示安装成功：</p><fancybox>![16](https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A61/16.png)</fancybox><hr><h1 id="使用-SSR"><a href="#使用-SSR" class="headerlink" title="使用 SSR"></a><font color=#FF0000>使用 SSR</font></h1><p>常见的工具有 ShadowsocksR、SSTap（原本是个游戏加速器，现在已经停止维护，但 GitHub 上仍然可以找到）等。</p><p>Shadowsocks 官网：<a href="https://shadowsocks.org/" target="_blank" rel="noopener">https://shadowsocks.org/</a><br>ShadowsocksR 下载地址：<a href="https://github.com/Anankke/SSRR-Windows" target="_blank" rel="noopener">https://github.com/Anankke/SSRR-Windows</a><br>SSTap GitHub 地址：<a href="https://github.com/FQrabbit/SSTap-Rule" target="_blank" rel="noopener">https://github.com/FQrabbit/SSTap-Rule</a></p><p>不管什么工具，用法都是一样的，添加一个新的代理服务器，服务器 IP、端口、密码、加密方式等等这些信息保持一致就行了。然后就可以愉快地科学上网了！</p><fancybox>![17](https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A61/16.png)</fancybox><fancybox>![18](https://cdn.jsdelivr.net/gh/TRHX/ImageHosting/ITRHX-PIC/A61/18.png)</fancybox><hr><h1 id="多端口配置"><a href="#多端口配置" class="headerlink" title="多端口配置"></a><font color=#FF0000>多端口配置</font></h1><p>经过以上步骤我们就可以科学上网了，但是目前为止只有一个端口，只能一个人用，那么如何实现多个端口多人使用呢？事实上端口、密码等信息是储存在一个叫做 <code>shadowsocks.json</code> 文件里的，如果要添加端口或者更改密码，只需要修改此文件即可。</p><p>连接到自己的 VPS，输入以下命令，使用 vim 编辑文件：<code>vi /etc/shadowsocks.json</code></p><p>原文件内容大概如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"server"</span>: <span class="string">"0.0.0.0"</span>,</span><br><span class="line">    <span class="attr">"server_port"</span>: <span class="number">8686</span>,</span><br><span class="line">    <span class="attr">"server_ipv6"</span>: <span class="string">"::"</span>,</span><br><span class="line">    <span class="attr">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="attr">"local_port"</span>: <span class="number">1081</span>,</span><br><span class="line">    <span class="attr">"password"</span>:<span class="string">"SSR12345"</span>,</span><br><span class="line">    <span class="attr">"timeout"</span>: <span class="number">120</span>,</span><br><span class="line">    <span class="attr">"udp_timeout"</span>: <span class="number">60</span>,</span><br><span class="line">    <span class="attr">"method"</span>: <span class="string">"aes-256-cfb"</span>,</span><br><span class="line">    <span class="attr">"protocol"</span>: <span class="string">"auth_sha1_v4_compatible"</span>,</span><br><span class="line">    <span class="attr">"protocol_param"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"obfs"</span>: <span class="string">"http_simple_compatible"</span>,</span><br><span class="line">    <span class="attr">"obfs_param"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"dns_ipv6"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"connect_verbose_info"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"redirect"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"fast_open"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"workers"</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>增加端口，我们将其修改为如下内容：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"server"</span>: <span class="string">"0.0.0.0"</span>,</span><br><span class="line">    <span class="attr">"server_ipv6"</span>: <span class="string">"::"</span>,</span><br><span class="line">    <span class="attr">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="attr">"local_port"</span>: <span class="number">1081</span>,</span><br><span class="line">    <span class="attr">"port_password"</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">"8686"</span>:<span class="string">"SSR1"</span>,</span><br><span class="line">        <span class="attr">"8687"</span>:<span class="string">"SSR2"</span>,</span><br><span class="line">        <span class="attr">"8688"</span>:<span class="string">"SSR3"</span>,</span><br><span class="line">        <span class="attr">"8689"</span>:<span class="string">"SSR4"</span>,</span><br><span class="line">        <span class="attr">"8690"</span>:<span class="string">"SSR5"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"timeout"</span>: <span class="number">120</span>,</span><br><span class="line">    <span class="attr">"udp_timeout"</span>: <span class="number">60</span>,</span><br><span class="line">    <span class="attr">"method"</span>: <span class="string">"aes-256-cfb"</span>,</span><br><span class="line">    <span class="attr">"protocol"</span>: <span class="string">"auth_sha1_v4_compatible"</span>,</span><br><span class="line">    <span class="attr">"protocol_param"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"obfs"</span>: <span class="string">"http_simple_compatible"</span>,</span><br><span class="line">    <span class="attr">"obfs_param"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"dns_ipv6"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"connect_verbose_info"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"redirect"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"fast_open"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"workers"</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也就是删除原来的 <code>server_port</code> 和 <code>password</code> 这两项，然后增加 <code>port_password</code> 这一项，前面是端口号，后面是密码，注意不要把格式改错了！！！修改完毕并保存！！！</p><p>接下来配置一下防火墙，同样的，输入以下命令，用 vim 编辑文件：<code>vi /etc/firewalld/zones/public.xml</code></p><p>初始的防火墙只开放了最初配置 SSR 默认的那个端口，现在需要我们手动加上那几个新加的端口，<font color=#FF0000><strong>注意：一个端口需要复制两行，一行是 tcp，一行是 udp。</strong></font></p><p>原文件内容大概如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">zone</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">short</span>&gt;</span>Public<span class="tag">&lt;/<span class="name">short</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">service</span> <span class="attr">name</span>=<span class="string">"dhcpv6-client"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">service</span> <span class="attr">name</span>=<span class="string">"ssh"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">port</span> <span class="attr">protocol</span>=<span class="string">"tcp"</span> <span class="attr">port</span>=<span class="string">"8686"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">port</span> <span class="attr">protocol</span>=<span class="string">"udp"</span> <span class="attr">port</span>=<span class="string">"8686"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">zone</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改后的内容如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">zone</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">short</span>&gt;</span>Public<span class="tag">&lt;/<span class="name">short</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">service</span> <span class="attr">name</span>=<span class="string">"dhcpv6-client"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">service</span> <span class="attr">name</span>=<span class="string">"ssh"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">port</span> <span class="attr">protocol</span>=<span class="string">"tcp"</span> <span class="attr">port</span>=<span class="string">"8686"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">port</span> <span class="attr">protocol</span>=<span class="string">"udp"</span> <span class="attr">port</span>=<span class="string">"8686"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">port</span> <span class="attr">protocol</span>=<span class="string">"tcp"</span> <span class="attr">port</span>=<span class="string">"8687"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">port</span> <span class="attr">protocol</span>=<span class="string">"udp"</span> <span class="attr">port</span>=<span class="string">"8687"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">port</span> <span class="attr">protocol</span>=<span class="string">"tcp"</span> <span class="attr">port</span>=<span class="string">"8688"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">port</span> <span class="attr">protocol</span>=<span class="string">"udp"</span> <span class="attr">port</span>=<span class="string">"8688"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">port</span> <span class="attr">protocol</span>=<span class="string">"tcp"</span> <span class="attr">port</span>=<span class="string">"8689"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">port</span> <span class="attr">protocol</span>=<span class="string">"udp"</span> <span class="attr">port</span>=<span class="string">"8689"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">port</span> <span class="attr">protocol</span>=<span class="string">"tcp"</span> <span class="attr">port</span>=<span class="string">"8690"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">port</span> <span class="attr">protocol</span>=<span class="string">"udp"</span> <span class="attr">port</span>=<span class="string">"8690"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">zone</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改完毕并保存，最后重启一下 shadowsocks，然后重新载入防火墙即可，两条命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/shadowsocks restart</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>完成之后，我们新加的这几个端口就可以使用了</p><p>另外还可以将配置转换成我们常见的链接形式，如：<code>ss://xxxxx</code> 或 <code>ssr://xxxxx</code>，其实这种链接就是把 IP，端口，密码等信息按照一定的格式拼接起来，然后经过 Base64 编码后实现的，有兴趣或者有需求的可以自行百度。</p><hr><h1 id="扩展命令"><a href="#扩展命令" class="headerlink" title="扩展命令"></a><font color=#FF0000>扩展命令</font></h1><p>SSR 常用命令：<br>启动：<code>/etc/init.d/shadowsocks start</code><br>停止：<code>/etc/init.d/shadowsocks stop</code><br>重启：<code>/etc/init.d/shadowsocks restart</code><br>状态：<code>/etc/init.d/shadowsocks status</code><br>卸载：<code>./shadowsocks-all.sh uninstall</code><br>更改配置参数：<code>vim /etc/shadowsocks-r/config.json</code></p><hr><p>我的博客即将同步至腾讯云+社区，邀请大家一同入驻：<a href="https://cloud.tencent.com/developer/support-plan?invite_code=mpa02hyz07v5" target="_blank" rel="noopener">https://cloud.tencent.com/developer/support-plan?invite_code=mpa02hyz07v5</a></p>]]></content>
      
      
      <categories>
          
          <category> VPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
            <tag> SSR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/04/27/hello-world/"/>
      <url>/2020/04/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
